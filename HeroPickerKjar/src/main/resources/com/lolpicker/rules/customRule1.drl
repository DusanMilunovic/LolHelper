package com.lolpicker.rules;
import com.lolpicker.model.ChampionPick;
import com.lolpicker.model.ChampionSelect;
import com.lolpicker.model.Champion;
import com.lolpicker.model.Clasz;
import com.lolpicker.model.StrongPoint;
import com.lolpicker.model.CompositionType;
import com.lolpicker.model.StrongPoint;
import com.lolpicker.model.CompositionStrongPoint;

rule "enemy team, custom_1 composition"
	no-loop
	when
		$ad: Number(this >= 5) from accumulate 
		($cp: ChampionPick(myTeam == false, Clasz.adcarry memberOf classes), count($cp))
		$ap: Number(this >= 0) from accumulate 
		($cp: ChampionPick(myTeam == false, Clasz.apcarry memberOf classes), count($cp))
		$tank: Number(this >= 0) from accumulate 
		($cp: ChampionPick(myTeam == false, Clasz.tank memberOf classes), count($cp))
		$healer: Number(this >= 0) from accumulate 
		($cp: ChampionPick(myTeam == false, Clasz.healer memberOf classes), count($cp))
		$poke: Number(this >= 0) from accumulate 
		($cp: ChampionPick(myTeam == false, Clasz.poke memberOf classes), count($cp))
		$cs: ChampionSelect(enemyTeamComposition not contains CompositionType.customComposition1)
	then
		$cs.getEnemyTeamComposition().add(CompositionType.customComposition1);
		update($cs);
end
rule "my team, custom_1 composition"
	no-loop
	when
		$ad: Number(this >= 5) from accumulate 
		($cp: ChampionPick(myTeam == true, Clasz.adcarry memberOf classes), count($cp))
		$ap: Number(this >= 0) from accumulate 
		($cp: ChampionPick(myTeam == true, Clasz.apcarry memberOf classes), count($cp))
		$tank: Number(this >= 0) from accumulate 
		($cp: ChampionPick(myTeam == true, Clasz.tank memberOf classes), count($cp))
		$healer: Number(this >= 0) from accumulate 
		($cp: ChampionPick(myTeam == true, Clasz.healer memberOf classes), count($cp))
		$poke: Number(this >= 0) from accumulate 
		($cp: ChampionPick(myTeam == true, Clasz.poke memberOf classes), count($cp))
		$cs: ChampionSelect(myTeamComposition not contains CompositionType.customComposition1)
	then
		$cs.getMyTeamComposition().add(CompositionType.customComposition1);
		update($cs);
end
rule "enemy team custom_1 comp"
	salience -1
	when 
		$cs: ChampionSelect(enemyTeamComposition contains CompositionType.customComposition1)
	then
		ArrayList<Champion> champions = new ArrayList<>();
		champions.add(Champion.Annie);
		champions.add(Champion.Ashe);
		champions.add(Champion.Blitzcrank);
		champions.add(Champion.Caitlyn);
		champions.add(Champion.Cassiopeia);
		champions.add(Champion.Azir);
		champions.add(Champion.AurelionSol);
		champions.add(Champion.Akali);


		$cs.getCompositionCounters().put("customComposition1", champions);
end


